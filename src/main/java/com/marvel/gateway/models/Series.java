/*
 * MarvelComicsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/14/2016
 */
package com.marvel.gateway.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class Series 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5531683174802325539L;
    private CharacterList characters;
    private ComicList comics;
    private CreatorList creators;
    private String description;
    private int endYear;
    private EventList events;
    private int id;
    private Date modified;
    private SeriesSummary next;
    private SeriesSummary previous;
    private String rating;
    private String resourceURI;
    private int startYear;
    private StoryList stories;
    private Thumbnail thumbnail;
    private String title;
    private List<Url> urls;
    /** GETTER
     * A resource list containing characters which appear in comics in this series.
     */
    @JsonGetter("characters")
    public CharacterList getCharacters ( ) { 
        return this.characters;
    }
    
    /** SETTER
     * A resource list containing characters which appear in comics in this series.
     */
    @JsonSetter("characters")
    public void setCharacters (CharacterList value) { 
        this.characters = value;
    }
 
    /** GETTER
     * A resource list containing comics in this series.
     */
    @JsonGetter("comics")
    public ComicList getComics ( ) { 
        return this.comics;
    }
    
    /** SETTER
     * A resource list containing comics in this series.
     */
    @JsonSetter("comics")
    public void setComics (ComicList value) { 
        this.comics = value;
    }
 
    /** GETTER
     * A resource list of creators whose work appears in comics in this series.
     */
    @JsonGetter("creators")
    public CreatorList getCreators ( ) { 
        return this.creators;
    }
    
    /** SETTER
     * A resource list of creators whose work appears in comics in this series.
     */
    @JsonSetter("creators")
    public void setCreators (CreatorList value) { 
        this.creators = value;
    }
 
    /** GETTER
     * A description of the series.
     */
    @JsonGetter("description")
    public String getDescription ( ) { 
        return this.description;
    }
    
    /** SETTER
     * A description of the series.
     */
    @JsonSetter("description")
    public void setDescription (String value) { 
        this.description = value;
    }
 
    /** GETTER
     * The last year of publication for the series (conventionally, 2099 for ongoing series) .
     */
    @JsonGetter("endYear")
    public int getEndYear ( ) { 
        return this.endYear;
    }
    
    /** SETTER
     * The last year of publication for the series (conventionally, 2099 for ongoing series) .
     */
    @JsonSetter("endYear")
    public void setEndYear (int value) { 
        this.endYear = value;
    }
 
    /** GETTER
     * A resource list containing events which take place in comics in this series.
     */
    @JsonGetter("events")
    public EventList getEvents ( ) { 
        return this.events;
    }
    
    /** SETTER
     * A resource list containing events which take place in comics in this series.
     */
    @JsonSetter("events")
    public void setEvents (EventList value) { 
        this.events = value;
    }
 
    /** GETTER
     * The unique ID of the series resource.
     */
    @JsonGetter("id")
    public int getId ( ) { 
        return this.id;
    }
    
    /** SETTER
     * The unique ID of the series resource.
     */
    @JsonSetter("id")
    public void setId (int value) { 
        this.id = value;
    }
 
    /** GETTER
     * The date the resource was most recently modified.
     */
    @JsonGetter("modified")
    public Date getModified ( ) { 
        return this.modified;
    }
    
    /** SETTER
     * The date the resource was most recently modified.
     */
    @JsonSetter("modified")
    public void setModified (Date value) { 
        this.modified = value;
    }
 
    /** GETTER
     * A summary representation of the series which follows this series.
     */
    @JsonGetter("next")
    public SeriesSummary getNext ( ) { 
        return this.next;
    }
    
    /** SETTER
     * A summary representation of the series which follows this series.
     */
    @JsonSetter("next")
    public void setNext (SeriesSummary value) { 
        this.next = value;
    }
 
    /** GETTER
     * A summary representation of the series which preceded this series.
     */
    @JsonGetter("previous")
    public SeriesSummary getPrevious ( ) { 
        return this.previous;
    }
    
    /** SETTER
     * A summary representation of the series which preceded this series.
     */
    @JsonSetter("previous")
    public void setPrevious (SeriesSummary value) { 
        this.previous = value;
    }
 
    /** GETTER
     * The age-appropriateness rating for the series.
     */
    @JsonGetter("rating")
    public String getRating ( ) { 
        return this.rating;
    }
    
    /** SETTER
     * The age-appropriateness rating for the series.
     */
    @JsonSetter("rating")
    public void setRating (String value) { 
        this.rating = value;
    }
 
    /** GETTER
     * The canonical URL identifier for this resource.
     */
    @JsonGetter("resourceURI")
    public String getResourceURI ( ) { 
        return this.resourceURI;
    }
    
    /** SETTER
     * The canonical URL identifier for this resource.
     */
    @JsonSetter("resourceURI")
    public void setResourceURI (String value) { 
        this.resourceURI = value;
    }
 
    /** GETTER
     * The first year of publication for the series.
     */
    @JsonGetter("startYear")
    public int getStartYear ( ) { 
        return this.startYear;
    }
    
    /** SETTER
     * The first year of publication for the series.
     */
    @JsonSetter("startYear")
    public void setStartYear (int value) { 
        this.startYear = value;
    }
 
    /** GETTER
     * A resource list containing stories which occur in comics in this series.
     */
    @JsonGetter("stories")
    public StoryList getStories ( ) { 
        return this.stories;
    }
    
    /** SETTER
     * A resource list containing stories which occur in comics in this series.
     */
    @JsonSetter("stories")
    public void setStories (StoryList value) { 
        this.stories = value;
    }
 
    /** GETTER
     * The representative image for this series.
     */
    @JsonGetter("thumbnail")
    public Thumbnail getThumbnail ( ) { 
        return this.thumbnail;
    }
    
    /** SETTER
     * The representative image for this series.
     */
    @JsonSetter("thumbnail")
    public void setThumbnail (Thumbnail value) { 
        this.thumbnail = value;
    }
 
    /** GETTER
     * The canonical title of the series.
     */
    @JsonGetter("title")
    public String getTitle ( ) { 
        return this.title;
    }
    
    /** SETTER
     * The canonical title of the series.
     */
    @JsonSetter("title")
    public void setTitle (String value) { 
        this.title = value;
    }
 
    /** GETTER
     * A set of public web site URLs for the resource.
     */
    @JsonGetter("urls")
    public List<Url> getUrls ( ) { 
        return this.urls;
    }
    
    /** SETTER
     * A set of public web site URLs for the resource.
     */
    @JsonSetter("urls")
    public void setUrls (List<Url> value) { 
        this.urls = value;
    }
 
}
 